apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: &app kube-prometheus-stack
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: 66.6.0
  interval: 1h0m0s
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: Skip
    remediation:
      strategy: rollback
      retries: 3
  values:
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true

    alertmanager:
      enabled: false

    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

    kubeControllerManager:
      enabled: false

    kubeEtcd:
      enabled: false

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

    kubeProxy:
      enabled: false

    kubeScheduler:
      enabled: false

    kubeStateMetrics:
      enabled: false

    grafana:
      enabled: false

    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        limits:
          memory: 326M

    prometheusConfigReloader:
        # resource config for prometheusConfigReloader
        resources:
          requests:
            cpu: 5m
            memory: 32M
          limits:
            memory: 32M

    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - prometheus.${SECRET_DOMAIN}
        pathType: Prefix

      prometheusSpec:
        alertingEndpoints:
          - namespace: observability
            name: alertmanager
            port: 9093
            apiVersion: v2
        enableAdminAPI: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        podMonitorSelector: &selector
          matchLabels: null
        probeSelector: *selector
        replicas: 1
        replicaExternalLabelName: "__replica__" # must match with thanos value `.query.replicaLabel[0]`
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 1500M
        retention: 14d
        retentionSize: 10GB
        ruleSelector: *selector
        scrapeConfigSelector: *selector
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        serviceMonitorSelector: *selector
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 20Gi
        walCompression: true
